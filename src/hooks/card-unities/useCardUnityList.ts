//Generated by GetuseModelListts - useModelList.ts
"use client";
import { GetCardUnitiesResponse } from "@/interfaces/CardUnityInterfaces";
import { CardUnitySearchParams } from "@/interfaces/CardUnityInterfaces";
import { BasicModel } from "@/interfaces/GeneralInterfaces";
import axiosClient from "@/utils/api";
import { useQuery } from "@tanstack/react-query";
import { useEffect, useState } from "react";

const getCardUnities = async (useName: boolean = false) => {
  const { data } = await axiosClient.get<GetCardUnitiesResponse>(
    `card-unities`,
    {
      params: {
        fetchCount: "false",
        simpleOnly: "true",
      } as Partial<CardUnitySearchParams>,
    }
  );

  return data.rows.map((item) => ({
    id: !useName ? item.id : item.cardCompositions,
    name: item.cardCompositions,
  }));
};

interface UseListProps {
  placeholderData?: BasicModel[];
  useName?: boolean;
}

const useCardUnityList = (prop?: UseListProps) => {
  //local states
  const [mounted, setMounted] = useState(false);

  const _ = useQuery({
    queryKey: ["cardUnity-list"],
    queryFn: () => getCardUnities(prop?.useName),
    enabled: mounted,
    placeholderData: prop?.placeholderData,
  });

  useEffect(() => {
    setMounted(true);
  }, []);

  return _;
};

export default useCardUnityList;
