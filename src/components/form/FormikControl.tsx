//Generated by GeneratePageFile
import { FormikCombobox } from "@/components/formik/FormikCombobox";
import { FormikFacetedControl } from "@/components/formik/FormikFacetedControl";
import { FormikInput } from "@/components/formik/FormikInput";
import { FormikSelect } from "@/components/formik/FormikSelect";
import { FormikSwitch } from "@/components/formik/FormikSwitch";
import { FormikTextArea } from "@/components/formik/FormikTextArea";
import { BasicModel } from "@/interfaces/GeneralInterfaces";
import { ClassValue } from "clsx";
import React, { RefObject } from "react";

interface ControlProps {
  name: string;
  label?: string;
  submitOnChange?: boolean;
  placeholder?: string;
  containerClassNames?: ClassValue[];
}

interface TextProps extends ControlProps {
  type: "Text";
  inputRef?: RefObject<any> | undefined;
  setFocusOnLoad?: boolean;
}

interface TextareaProps extends ControlProps {
  type: "Textarea";
}

interface WholeNumberProps extends ControlProps {
  type: "WholeNumber";
}

interface SwitchProps extends ControlProps {
  type: "Switch";
}

interface ComboBoxProps extends ControlProps {
  type: "ComboBox";
  options: BasicModel[];
  showLabel: boolean;
}

interface SelectProps extends ControlProps {
  type: "Select";
  options: BasicModel[];
  showLabel: boolean;
  allowBlank?: boolean;
}

interface FacetedControlProps extends ControlProps {
  type: "FacetedControl";
  options: BasicModel[];
  limit?: number;
}

type FormikControlProps =
  | FacetedControlProps
  | TextProps
  | SwitchProps
  | ComboBoxProps
  | SelectProps
  | WholeNumberProps
  | TextareaProps;

const FormikControl: React.FC<FormikControlProps> = (props) => {
  const {
    type,
    name,
    label = "",
    submitOnChange,
    containerClassNames,
    placeholder,
  } = props;
  switch (type) {
    case "Switch":
      return (
        <FormikSwitch
          name={name}
          label={label}
          submitOnChange={submitOnChange}
          containerClassNames={containerClassNames}
        />
      );
    case "FacetedControl":
      return (
        <FormikFacetedControl
          name={name}
          options={props.options}
          label={label}
          containerClassNames={containerClassNames}
          limit={props.limit || 4}
        />
      );
    case "ComboBox":
      return (
        <FormikCombobox
          name={name}
          items={props.options}
          label={label}
          containerClassNames={containerClassNames}
          showLabel={props.showLabel}
        />
      );
    case "Select":
      return (
        <FormikSelect
          name={name}
          options={props.options}
          label={label}
          containerClassNames={containerClassNames}
          showLabel={props.showLabel}
          allowBlank={props.allowBlank || false}
        />
      );
    case "Textarea":
      return (
        <FormikTextArea
          name={name}
          label={label}
          containerClassNames={containerClassNames}
        />
      );
    case "WholeNumber":
      return (
        <FormikInput
          name={name}
          label={label}
          isNumeric={true}
          wholeNumberOnly={true}
          containerClassNames={containerClassNames}
        />
      );
    default:
      return (
        <FormikInput
          name={name}
          label={label}
          submitOnChange={submitOnChange}
          placeholder={placeholder}
          containerClassNames={containerClassNames}
          inputRef={props.inputRef}
          setFocusOnLoad={props.setFocusOnLoad}
        />
      );
  }
};

export default FormikControl;
