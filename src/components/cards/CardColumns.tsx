//Generated by WriteToModelcolumns_tsx - ModelColumns.tsx
"use client";
import { ColumnDef } from "@tanstack/react-table";
import { Checkbox } from "@/components/ui/Checkbox";
import { DataTableColumnHeader } from "@/components/ui/DataTable/DataTableColumnHeader";
import { EditableTableCell } from "@/components/ui/DataTable/EditableTableCell";
import { CardFormikShape } from "@/interfaces/CardInterfaces";
import { DeleteRowColumn } from "@/components/ui/DataTable/DeleteRowColumn";
//Generated by GetControlOptionsImportLine - GetControlOptionsImportLine
import { CONTROL_OPTIONS } from "@/utils/constants/CardConstants";
//Generated by GetModelRowActionsImport - GetModelRowActionsImport
import { CardRowActions } from "@/components/cards/CardRowActions";

export const CardColumns: ColumnDef<CardFormikShape>[] = [
  {
    id: "select",
    header: ({ table }) => {
      const toggleSelectAllRow = table.options.meta?.toggleSelectAllRow;
      return (
        <div className="flex justify-center w-full">
          <Checkbox
            tabIndex={-1}
            checked={table.getIsAllPageRowsSelected()}
            onCheckedChange={() => {
              toggleSelectAllRow && toggleSelectAllRow();
            }}
            aria-label="Select all"
          />
        </div>
      );
    },
    cell: ({ row, table }) => {
      const toggleRow = table.options.meta?.toggleRow;
      return (
        <div className="flex justify-center">
          <Checkbox
            tabIndex={-1}
            checked={row.getIsSelected()}
            onCheckedChange={() => {
              toggleRow && toggleRow(row.index);
            }}
            aria-label="Select row"
          />
        </div>
      );
    },
  },
  //Generated by GetAllTableFieldCellInputBySeqModel
  //Generated by GetTableFieldCellInput
  {
    accessorKey: "name",
    header: ({ column }) => (
      <DataTableColumnHeader
        column={column}
        title="Name"
      />
    ),
    cell: (cell) => <EditableTableCell {...cell} />,
    meta: {
      type: "Text",
      label: "Name",
    },
    enableSorting: true,
  }, //Generated by GetTableFieldCellInput
  {
    accessorKey: "type",
    header: ({ column }) => (
      <DataTableColumnHeader
        column={column}
        title="Type"
      />
    ),
    cell: (cell) => <EditableTableCell {...cell} />,
    meta: {
      type: "Select",
      label: "Type",
      options: CONTROL_OPTIONS["type"],
    },
    enableSorting: true,
  }, //Generated by GetTableFieldCellInput
  {
    accessorKey: "cost",
    header: ({ column }) => (
      <DataTableColumnHeader
        column={column}
        title="Cost"
      />
    ),
    cell: (cell) => <EditableTableCell {...cell} />,
    meta: {
      type: "WholeNumber",
      label: "Cost",
      alignment: "right",
    },
    enableSorting: true,
  }, //Generated by GetTableFieldCellInput
  {
    accessorKey: "battleStyle",
    header: ({ column }) => (
      <DataTableColumnHeader
        column={column}
        title="Battle Style"
      />
    ),
    cell: (cell) => <EditableTableCell {...cell} />,
    meta: {
      type: "Select",
      label: "Battle Style",
      options: CONTROL_OPTIONS["battleStyle"],
    },
    enableSorting: true,
  }, //Generated by GetTableFieldCellInput
  {
    accessorKey: "atk",
    header: ({ column }) => (
      <DataTableColumnHeader
        column={column}
        title="ATK"
      />
    ),
    cell: (cell) => <EditableTableCell {...cell} />,
    meta: {
      type: "WholeNumber",
      label: "ATK",
      alignment: "right",
    },
    enableSorting: true,
  }, //Generated by GetTableFieldCellInput
  {
    accessorKey: "shield",
    header: ({ column }) => (
      <DataTableColumnHeader
        column={column}
        title="Shield"
      />
    ),
    cell: (cell) => <EditableTableCell {...cell} />,
    meta: {
      type: "WholeNumber",
      label: "Shield",
      alignment: "right",
    },
    enableSorting: true,
  }, //Generated by GetTableFieldCellInput
  {
    accessorKey: "description",
    header: ({ column }) => (
      <DataTableColumnHeader
        column={column}
        title="Description"
      />
    ),
    cell: (cell) => <EditableTableCell {...cell} />,
    meta: {
      type: "Textarea",
      label: "Description",
    },
    enableSorting: false,
  }, //Generated by GetTableFieldCellInput
  {
    accessorKey: "deckId",
    header: ({ column }) => (
      <DataTableColumnHeader
        column={column}
        title="Deck"
      />
    ),
    cell: (cell) => <EditableTableCell {...cell} />,
    meta: {
      type: "ComboBox",
      label: "Deck",
      alignment: "right", //Generated by Get_listNameFromRelationship
      listName: "deck-list",
    },
    enableSorting: true,
  },
  {
    id: "actions",
    //cell component generated by GetActionCell
    cell: (cell) => <CardRowActions cell={cell} />,
  },
];
