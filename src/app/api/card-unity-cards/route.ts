//Generated by WriteToModelsRouteApiNoForm - models route next 13 no form
import { CardUnityCard } from "@/models/CardUnityCardModel";
import { FindOptions, Transaction } from "sequelize";
import { Op } from "sequelize";
import {
  CardUnityCardDeletePayload,
  CardUnityCardFormikShape,
} from "@/interfaces/CardUnityCardInterfaces";
import sequelize from "@/config/db";
import { PRIMARY_KEY } from "@/utils/constants/CardUnityCardConstants";
import { NextResponse } from "next/server";
import handleSequelizeError from "@/utils/errorHandling";
import {
  createCardUnityCard,
  deleteCardUnityCards,
  updateCardUnityCard,
} from "@/utils/api/CardUnityCardLibs";

const ModelObject = CardUnityCard;

//Generated by GeneratefindOptions
const findOptions: FindOptions<typeof CardUnityCard> = {
  //Generated by GenerateIncludeOption
  include: [],
  //Generated by GenerateAttributesOption
  attributes: [
    //Generated by GetAllModelAttributesBySeqModel
    "id",
    "description",
    "CardUnityId",
    "CardId",
    "createdAt",
    "updatedAt",
  ],
};
export const DELETE = async (req: Request) => {
  const body = (await req.json()) as CardUnityCardDeletePayload;
  const { deletedCardUnityCards } = body;

  if (deletedCardUnityCards.length > 0) {
    const t = await sequelize.transaction();
    try {
      await deleteCardUnityCards(PRIMARY_KEY, deletedCardUnityCards, t);
      t.commit();
      return NextResponse.json("success");
    } catch (error) {
      t.rollback();
      return handleSequelizeError(error);
    }
  }
};
