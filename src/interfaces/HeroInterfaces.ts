//Generated by WriteToModelinterface_ts - ModelInterface.ts Next 13
//Generated by GetAllRelatedInterfaceImportBySeqModel
//Generated by GetRelatedInterfaceImport - RelatedInterfaceImport
import {
  HeroSkillFormikInitialValues,
  HeroSkillFormikShape,
  HeroSkillModel,
  HeroSkillUpdatePayload,
} from "@/interfaces/HeroSkillInterfaces";
//Generated by GetAllRelatedRightModelImport
import { DeckModel } from "@/interfaces/DeckInterfaces"; //Generated by GetRelatedRightModelImport - GetRelatedRightModelImport
import { ListQuery } from "./interface";

export interface HeroModel {
  //Generated by GetAllModelFieldTypeBySeqModel
  belongsto_id: number | string; //Generated by GetModelFieldType
  heroName: string; //Generated by GetModelFieldType
  //Generated by GetAllChildModelInterfaceBySeqModel
  HeroSkills: HeroSkillModel[]; //Generated by GetChildModelInterface - ChildModelInterface

  //Generated by GetAllRelatedRightModelInterface
  Deck: DeckModel; //Generated by GetRelatedRightModelInterface - GetRelatedRightModelInterface
}

//The keys after the updatedAt is generated by GetAllRelatedModelNameBySeqModel - RelatedModelName
export interface HeroFormikShape
  extends Omit<
    HeroModel,
    | "slug"
    | "createdAt"
    | "updatedAt"
    | "HeroSkills" //Generated by GetRelatedPluralizedModelName - RelatedPluralizedModelName
    | "Deck" //Generated by GetRelatedRightModelName - GetRelatedRightModelName
  > {
  touched: boolean;
  index: number;
}

//Use for continuos list form
export interface HeroFormikInitialValues {
  Heroes: HeroFormikShape[];
}

//The FormikInitialValues is generated by GetAllRelatedFormikInitialValues - ModelFormikInitialValue
export interface HeroFormFormikInitialValues
  extends Omit<HeroFormikShape, "touched" | "index">,
    HeroSkillFormikInitialValues {}

//The extends portion is generated by GetModelUpdatePayloadExtension - GetRelatedPartialPayload
export interface HeroUpdatePayload extends Partial<HeroSkillUpdatePayload> {
  Heroes: Omit<HeroFormikShape, "touched">[];
}

export interface HeroDeletePayload {
  deletedHeroes: string[] | number[];
}

//Use for single form (with children)
//The Related Models will be replaced by the Payload version
export interface HeroFormUpdatePayload
  extends Omit<HeroFormikShape, "touched" | "index">,
    HeroSkillUpdatePayload {}

export interface HeroFormikFilter {
  //Generated by GetAllFilterInterfaceBySeqmodel
}

export interface HeroSearchParams
  extends ListQuery,
    Omit<HeroFormikFilter, ""> {
  //Generated by GetAllNonStringFilterTypes
}

export interface GetHeroesResponse {
  count: number;
  rows: HeroModel[];
  cursor: string;
}
